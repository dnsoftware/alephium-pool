stages:
  - test
  - build
  - deploy

#variables:
 # GOPATH: "$CI_PROJECT_DIR/go"
  #GOBIN: "$GOPATH/bin"
  #PATH: "$GOBIN:$PATH"

# Этап тестирования
test:
  stage: test
  image: golang:1.22
  before_script:
    # Устанавливаем go-junit-report
    - go install github.com/jstemmer/go-junit-report@latest
  script:
    - go test ./... -v |  go-junit-report > report.xml     # Запуск всех тестов
  artifacts:
    paths:
      - report.xml
    when: always

# Этап сборки
build:
  stage: build
  image: golang:1.22    # Указываем Docker-образ с Go для сборки
  script:
    - go mod download   # Скачиваем зависимости
    - cd cmd/pooler
    - go build -o alph_pooler # Сборка проекта
    - ls -l  # Проверяем, где находится файл
  artifacts:
    paths:
      - cmd/pooler/alph_pooler           # Сохранение скомпилированного бинарного файла

# Этап деплоя (опционально)
deploy:
  stage: deploy
  only:
    - master # Деплой будет выполняться только при слиянии в ветку master
  script:
    - echo "Deploying myapp"
  environment:
    name: production
    url: https://myapp.com # URL вашего приложения после деплоя
